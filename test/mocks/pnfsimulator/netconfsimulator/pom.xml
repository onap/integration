<?xml version="1.0" encoding="UTF-8"?>
<!--
  ============LICENSE_START=======================================================
  Simulator
  ================================================================================
  Copyright (C) 2019 Nokia. All rights reserved.
  ================================================================================
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  ============LICENSE_END=========================================================
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.onap.simulator</groupId>
    <artifactId>simulator-parent</artifactId>
    <version>5.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>netconfsimulator</artifactId>
  <version>5.0.0-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>
    <docker.registry>nexus3.onap.org:10003</docker.registry>
    <docker.image.tag>latest</docker.image.tag>
    <docker.image.name>onap/${project.artifactId}</docker.image.name>
    <spring.boot.version>2.1.6.RELEASE</spring.boot.version>
    <spring.kafka.version>2.2.7.RELEASE</spring.kafka.version>
    <apache.httpclient.version>4.5.6</apache.httpclient.version>
    <dependency.directory.name>libs</dependency.directory.name>
    <dependency.directory.location>${project.build.directory}/${dependency.directory.name}
    </dependency.directory.location>
    <netopeer-saver-project-name>netopeer-change-saver</netopeer-saver-project-name>
    <netopeer-saver-source-dir>${project.basedir}/netopeer-change-saver-native</netopeer-saver-source-dir>
    <netopeer-saver-build-dir>${project.build.directory}/cmake</netopeer-saver-build-dir>
    <netopeer-saver-executable-dir>${netopeer-saver-build-dir}/bin</netopeer-saver-executable-dir>
    <skipITs>true</skipITs>
    <proxy>""</proxy>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
      <version>${spring.boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>${spring.boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.onosproject</groupId>
      <artifactId>jnc</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-websocket</artifactId>
      <version>${spring.boot.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.websocket</groupId>
      <artifactId>javax.websocket-api</artifactId>
      <version>1.1</version>
    </dependency>

    <!-- Kafka -->

    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
      <version>${spring.kafka.version}</version>
    </dependency>

    <!--  TEST DEPENDENCIES  -->

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.9.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.18.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.3.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <version>5.3.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>${spring.boot.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
      <version>${spring.kafka.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.bitbucket.radistao.test</groupId>
      <artifactId>before-after-spring-test-runner</artifactId>
      <version>0.1.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.palantir.docker.compose</groupId>
      <artifactId>docker-compose-rule-junit4</artifactId>
      <version>0.29.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpmime</artifactId>
      <version>4.5.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${apache.httpclient.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpmime</artifactId>
      <version>${apache.httpclient.version}</version>
    </dependency>

    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>2.9.2</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>2.9.2</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
          <outputDirectory>${dependency.directory.location}</outputDirectory>
          <includeScope>runtime</includeScope>
          <silent>true</silent>
        </configuration>
        <executions>
          <execution>
            <id>copy-external-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19</version>
        <dependencies>
          <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-surefire-provider</artifactId>
            <version>1.1.1</version>
          </dependency>
        </dependencies>
        <configuration>
          <detail>true</detail>
          <printSummary>true</printSummary>
          <useSystemClassLoader>false</useSystemClassLoader>
        </configuration>
      </plugin>
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.19.1</version>
          <configuration>
              <skipITs>${skipITs}</skipITs>
          </configuration>
          <executions>
              <execution>
                  <goals>
                      <goal>integration-test</goal>
                      <goal>verify</goal>
                  </goals>
              </execution>
          </executions>
      </plugin>
      <plugin>
      <groupId>io.fabric8</groupId>
      <artifactId>docker-maven-plugin</artifactId>
      <version>0.31.0</version>
      <executions>
        <execution>
          <id>build-images</id>
          <goals>
            <goal>push</goal>
          </goals>
        </execution>
      </executions>
      <configuration>
        <images>
          <image>
            <name>${docker.registry}/${docker.image.name}</name>
            <build>
              <contextDir>${project.basedir}</contextDir>
              <dockerFile>${project.basedir}/Dockerfile_app</dockerFile>
            </build>
          </image>
          <image>
            <name>${docker.registry}/netopeer</name>
            <build>
              <contextDir>${project.basedir}</contextDir>
              <dockerFile>${project.basedir}/Dockerfile_netopeer</dockerFile>
              <args>
                <PROXY>${proxy}</PROXY>
              </args>
            </build>
          </image>
        </images>
      </configuration>
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <id>Palantir</id>
      <url>https://dl.bintray.com/palantir/releases/</url>
    </repository>
  </repositories>
</project>

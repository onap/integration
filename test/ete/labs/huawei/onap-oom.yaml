heat_template_version: 2015-10-15
description: ONAP on Kubernetes using OOM

parameters:
  public_net_id:
    type: string
    description: The ID of the Public network for floating IP address allocation

  docker_proxy:
    type: string

  apt_proxy:
    type: string

resources:
  rancher_vm:
    type: OS::Nova::Server
    properties:
      name: rancher
      image: xenial
      flavor: m1.medium
      key_name: onap_key
      networks:
      - network: { get_param: public_net_id }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            __docker_proxy__: { get_param: docker_proxy }
            __apt_proxy__: { get_param: apt_proxy }
          template: |
            #!/bin/bash -x
            mkdir -p /opt/config
            echo `hostname -I` `hostname` >> /etc/hosts
            mkdir -p /etc/docker
            cat > /etc/docker/daemon.json <<EOF
            {
              "insecure-registries" : ["__docker_proxy__"]
            }
            EOF
            cat > /etc/apt/apt.conf.d/30proxy<<EOF
            Acquire::http { Proxy "http://__apt_proxy__"; };
            Acquire::https::Proxy "DIRECT";
            EOF
            apt-get -y update
            apt-get -y install docker.io
            usermod -aG docker ubuntu
            docker run --restart unless-stopped -d -p 8080:8080 rancher/server:v1.6.10

  k8s_vm:
    type: OS::Nova::Server
    properties:
      name: k8s
      image: xenial
      flavor: m1.xxlarge
      key_name: onap_key
      networks:
      - network: { get_param: public_net_id }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            __docker_proxy__: { get_param: docker_proxy }
            __apt_proxy__: { get_param: apt_proxy }
            __rancher_ip_addr__: { get_attr: [rancher_vm, first_address] }
          template: |
            #!/bin/bash -x
            echo `hostname -I` `hostname` >> /etc/hosts
            mkdir -p /etc/docker
            cat > /etc/docker/daemon.json <<EOF
            {
              "insecure-registries" : ["__docker_proxy__"]
            }
            EOF
            cat > /etc/apt/apt.conf.d/30proxy<<EOF
            Acquire::http { Proxy "http://__apt_proxy__"; };
            Acquire::https::Proxy "DIRECT";
            EOF
            apt-get -y update
            apt-get -y install jq

            cd /root

            # install docker 1.12
            curl -s https://releases.rancher.com/install-docker/1.12.sh | sh
            usermod -aG docker ubuntu

            # install kubernetes 1.8.6
            curl -s -LO https://storage.googleapis.com/kubernetes-release/release/v1.8.6/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
            mkdir ~/.kube

            # install helm 2.3
            wget http://storage.googleapis.com/kubernetes-helm/helm-v2.3.0-linux-amd64.tar.gz
            tar -zxvf helm-v2.3.0-linux-amd64.tar.gz
            sudo mv linux-amd64/helm /usr/local/bin/helm

            # Fix virtual memory allocation for onap-log:elasticsearch:
            sysctl -w vm.max_map_count=262144

            # install rancher agent
            RANCHER_IP=__rancher_ip_addr__
            until curl -s -o /dev/null -H "Accept: application/json" http://$RANCHER_IP:8080/v1/projects; do
                sleep 5
            done
            PID=$(curl -s -H "Accept: application/json" http://$RANCHER_IP:8080/v1/projects | jq -r '.data[0].id')
            TID=$(curl -s -X POST -H "Accept: application/json" -H "Content-Type: application/json" http://$RANCHER_IP:8080/v1/projects/$PID/registrationTokens | jq -r '.id')
            while [ $(jq -r .command token.json | wc -c) -lt 10 ]; do
                curl -s -X GET -H "Accept: application/json" http://$RANCHER_IP:8080/v1/projects/$PID/registrationToken/$TID > token.json
                sleep 1
            done
            CMD=$(jq -r .command token.json)
            eval $CMD
            touch apiout.json
            while [ $(jq -r .secretValue apiout.json | wc -c) -eq 0 ]; do
                curl -s -X POST -H "Accept: application/json" -H "Content-Type: application/json" -d '{"accountId":"1a1", "publicValue":"publicKey", "secretValue":"secretKey"}' http://$RANCHER_IP:8080/v1/projects/$PID/apikeys > apiout.json
                sleep 1
            done
            echo export RANCHER_URL=http://$RANCHER_IP:8080/v1/projects/$PID > api-keys
            echo export RANCHER_ACCESS_KEY=`jq -r '.publicValue' apiout.json` >> api-keys
            echo export RANCHER_SECRET_KEY=`jq -r '.secretValue' apiout.json` >> api-keys

            # download rancher CLI
            wget https://github.com/rancher/cli/releases/download/v0.6.7/rancher-linux-amd64-v0.6.7.tar.xz
            unxz rancher-linux-amd64-v0.6.7.tar.xz
            tar xvf rancher-linux-amd64-v0.6.7.tar

            # Clone OOM:
            cd ~
            git clone -b amsterdam http://gerrit.onap.org/r/oom

            # Update values.yaml to point to docker-proxy instead of nexus3:
            cd ~/oom/kubernetes
            perl -p -i -e 's/nexus3.onap.org:10001/__docker_proxy__/g' `find ./ -name values.yaml`

            # Pre-pull docker images:
            cd ~
            wget https://jira.onap.org/secure/attachment/10750/prepull_docker.sh
            chmod +x prepull_docker.sh
            sed -i -e 's/ &//g' prepull_docker.sh
            ./prepull_docker.sh

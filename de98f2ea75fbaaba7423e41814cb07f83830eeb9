{
  "comments": [
    {
      "key": {
        "uuid": "3f8e89e8_50467f22",
        "filename": "bootstrap/codesearch/Vagrantfile",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 5097
      },
      "writtenOn": "2019-12-20T08:50:24Z",
      "side": 1,
      "message": "Why are you assuming this IP will work as nameserver for anyone? Why not using Vagrant\u0027s driver own nameserver facilities?",
      "revId": "de98f2ea75fbaaba7423e41814cb07f83830eeb9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a5cc553_8e14c21a",
        "filename": "bootstrap/codesearch/Vagrantfile",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 5047
      },
      "writtenOn": "2019-12-23T16:34:12Z",
      "side": 1,
      "message": "This IP is the default one assigned to the second libvirt-managed interface (typically used by vagrant-libvirt plugin). You are correct that it works under certain assumptions:\n\n1) libvirt provider is used for this Vagrant machine\n2) vagrant-libvirt uses \"192.168.121.1\" address for Vagrant machine\u0027s host\n\nThose assumptions have been made to support Vagrant + libvirt stack (with vagrant-libvirt plugin) like in minimal-onap [1] without the need to access public DNS servers hardcoded in the base box [2] and using host ones instead. I came across this approach in Ubuntu Vagrant boxes [3], e.g. ubuntu/bionic64. They are built for VirtualBox only, though.\n\nSetting DNS server could have been made virtualization provider-specific step if not for provisioner evaluation order [4] which would postpone this action.\n\nWhat other solutions are available?\n\n1) Providing new Vagrant base box without hardcoded DNS servers; needs: setup, infra, maintenance\n2) Providing out-of-Vagrantfile patch for libvirt support and simplified way of applying it; needs: setup, maintenance\n3) Providing quickstart documentation describing verified environment (pending); seemed to be simpler approach to me\n\nLet me know what you think\n\n[1] https://git.onap.org/integration/tree/bootstrap/vagrant-minimal-onap/README.rst\n[2] https://github.com/lavabit/robox/blob/806fc9412a9a4164945b106f5f6ae53741d3baa2/scripts/ubuntu1804/network.sh#L44\n[3] https://launchpad.net/cloud-images\n[4] https://github.com/hashicorp/vagrant/issues/6035",
      "parentUuid": "3f8e89e8_50467f22",
      "revId": "de98f2ea75fbaaba7423e41814cb07f83830eeb9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ca60879_f8d3adfc",
        "filename": "bootstrap/codesearch/Vagrantfile",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1603
      },
      "writtenOn": "2019-12-19T19:39:07Z",
      "side": 1,
      "message": "just a question - will this prevent systemd-resolved from overwriting the changes made too /etc/resolv.conf.  (I found in my own notes for a recent ubuntu18-04 setup, I changed my dns configuration method from modifying /etc/resolve.conf to /etc/systemd/resolve.conf - due to that concern - i.e. there was a warning message in /etc/resolv.conf about not making changes in it)",
      "revId": "de98f2ea75fbaaba7423e41814cb07f83830eeb9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "938e4259_de2aff31",
        "filename": "bootstrap/codesearch/Vagrantfile",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 5097
      },
      "writtenOn": "2019-12-20T08:50:24Z",
      "side": 1,
      "message": "On Systemd managed systems resolv.conf is a symlink:\n\n/etc/resolv.conf -\u003e ../run/systemd/resolve/stub-resolv.conf\n\nDetaching symlink like above would work but i\u0027d also be for a more Systemd native solution for adding custom nameserver.\n\nSimple shell redirect \"\u003e\" would look nicer than \"| tee\" IMO.",
      "parentUuid": "8ca60879_f8d3adfc",
      "revId": "de98f2ea75fbaaba7423e41814cb07f83830eeb9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed09294f_e33b0ffe",
        "filename": "bootstrap/codesearch/Vagrantfile",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 5047
      },
      "writtenOn": "2019-12-23T16:34:12Z",
      "side": 1,
      "message": "@Eric: as @Bartek said, replacing this symlink by a static file disables its content management by systemd-resolved.\n\n@Bartek: systemd-resolved config is rendered from netplan YAMLs (\"/etc/netplan/01-netcfg.yaml\": https://github.com/lavabit/robox/blob/806fc9412a9a4164945b106f5f6ae53741d3baa2/scripts/ubuntu1804/network.sh#L44); I can change those, then apply generated config - providing static single line file seemed to be simpler solution.\n\nRedirection to \"tee\" was used to have it logged in provisioner output.\n\nFurther explanation in comment to \"host_ip\" variable above.",
      "parentUuid": "938e4259_de2aff31",
      "revId": "de98f2ea75fbaaba7423e41814cb07f83830eeb9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "a554b03d_450a2500",
        "filename": "test/security/check_certificates/check_certificates_validity.py",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 5097
      },
      "writtenOn": "2020-06-17T07:13:30Z",
      "side": 1,
      "message": "Setuptools can be used to automatically manage the dependencies (python native way)",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 26,
        "endChar": 28
      },
      "revId": "f96322ec2a3f9e2b3590f3c7db377dec0824dff6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd6a1359_71fe09a0",
        "filename": "test/security/check_certificates/check_certificates_validity.py",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1215
      },
      "writtenOn": "2020-06-17T08:27:42Z",
      "side": 1,
      "message": "yep I pushed the code without considering this aspect, just providing a way to manage it manually. But I can amend to complete it..",
      "parentUuid": "a554b03d_450a2500",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 26,
        "endChar": 28
      },
      "revId": "f96322ec2a3f9e2b3590f3c7db377dec0824dff6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0f4cd38_0006a459",
        "filename": "test/security/check_certificates/check_certificates_validity.py",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 2319
      },
      "writtenOn": "2020-06-17T10:58:43Z",
      "side": 1,
      "message": "if we\u0027re in cluster, we don\u0027t need it",
      "revId": "f96322ec2a3f9e2b3590f3c7db377dec0824dff6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25d16288_6da6da48",
        "filename": "test/security/check_certificates/check_certificates_validity.py",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 5097
      },
      "writtenOn": "2020-06-17T07:13:30Z",
      "side": 1,
      "message": "You can leverage \u0027get\u0027 attribute here:\n\nonap_namespace \u003d os.environ.get(\u0027ONAP_NAMESPACE\u0027, \u0027onap\u0027)",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "f96322ec2a3f9e2b3590f3c7db377dec0824dff6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b72f2e2_7a0f7d36",
        "filename": "test/security/check_certificates/check_certificates_validity.py",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1215
      },
      "writtenOn": "2020-06-17T08:27:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25d16288_6da6da48",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "f96322ec2a3f9e2b3590f3c7db377dec0824dff6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fca9434_2c6eae35",
        "filename": "test/security/check_certificates/check_certificates_validity.py",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 2319
      },
      "writtenOn": "2020-06-17T10:58:43Z",
      "side": 1,
      "message": "maybe a try/catch here if the port has no certs (HTTP, raw TCP, ...)?",
      "revId": "f96322ec2a3f9e2b3590f3c7db377dec0824dff6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73b97c21_200127de",
        "filename": "test/security/check_certificates/check_certificates_validity.py",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 2319
      },
      "writtenOn": "2020-06-17T10:58:43Z",
      "side": 1,
      "message": "and here we append with \"N/A\" if not SSL",
      "revId": "f96322ec2a3f9e2b3590f3c7db377dec0824dff6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76374ed7_5d23aa27",
        "filename": "test/security/check_certificates/check_certificates_validity.py",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 5097
      },
      "writtenOn": "2020-06-17T07:13:30Z",
      "side": 1,
      "message": "Which exception are you ignoring here?",
      "revId": "f96322ec2a3f9e2b3590f3c7db377dec0824dff6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a090e5f8_4db45ea6",
        "filename": "test/security/check_certificates/check_certificates_validity.py",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 1215
      },
      "writtenOn": "2020-06-17T08:27:42Z",
      "side": 1,
      "message": "As you can see it is not very subtil..\nI retrieve all the service from my k8s client, then I try to get the certificates, and I use the node_port of the service\nbut some of the services do not have node port..so the attempt will fail\nI could test if the none port is not empty before trying to retrieve the cert\n\nIt is also a good question - shall I consider only node port, I am not sure\nnode port are mandatory but are maybe not the only ones to take into account.\n\nIf the test is run from out of the cluster then I cannot give a try on internal port and I may miss certificates\nBut I could execute the test from inside the cluster as a k8s job and would have access to the internal address.\nneed to discuss with OOM team..",
      "parentUuid": "76374ed7_5d23aa27",
      "revId": "f96322ec2a3f9e2b3590f3c7db377dec0824dff6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2887b2a4_4b524de8",
        "filename": "test/security/check_certificates/check_certificates_validity.py",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 2319
      },
      "writtenOn": "2020-06-17T10:58:43Z",
      "side": 1,
      "message": "I think that if we can test all ports from ONAP, it would be nice.\nMost of internal ones are HTTP or TCP (like mariadb, cassandra, ...) so we also have to take care of that",
      "parentUuid": "a090e5f8_4db45ea6",
      "revId": "f96322ec2a3f9e2b3590f3c7db377dec0824dff6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39717a50_25a9d441",
        "filename": "test/security/check_certificates/templates/base.html.j2",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 2319
      },
      "writtenOn": "2020-06-17T10:58:43Z",
      "side": 1,
      "message": "no_need up to line 156",
      "revId": "f96322ec2a3f9e2b3590f3c7db377dec0824dff6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19650376_74ab53be",
        "filename": "test/security/check_certificates/templates/base.html.j2",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 2319
      },
      "writtenOn": "2020-06-17T10:58:43Z",
      "side": 1,
      "message": "no need",
      "revId": "f96322ec2a3f9e2b3590f3c7db377dec0824dff6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77a1188d_42eb47b0",
        "filename": "test/security/check_certificates/templates/base.html.j2",
        "patchSetId": 2
      },
      "lineNbr": 222,
      "author": {
        "id": 2319
      },
      "writtenOn": "2020-06-17T10:58:43Z",
      "side": 1,
      "message": "bad link",
      "revId": "f96322ec2a3f9e2b3590f3c7db377dec0824dff6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d30e06c_9d57d655",
        "filename": "test/security/check_certificates/templates/base.html.j2",
        "patchSetId": 2
      },
      "lineNbr": 223,
      "author": {
        "id": 2319
      },
      "writtenOn": "2020-06-17T10:58:43Z",
      "side": 1,
      "message": "gerrit here, not gitlab",
      "revId": "f96322ec2a3f9e2b3590f3c7db377dec0824dff6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "486f8228_4f92a8a4",
        "filename": "test/security/check_certificates/templates/cert.html.j2",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 2319
      },
      "writtenOn": "2020-06-17T10:58:43Z",
      "side": 1,
      "message": "you can use bulma colors, it would be better:\n\u003ctr {% if cert.remaining_days \u003c 30 %} class\u003d\"has-background-danger has-text-light\" {%elif cert.remaining_days \u003c 60 %} class\u003d\"has-background-warning\"{% endif %}\u003e",
      "revId": "f96322ec2a3f9e2b3590f3c7db377dec0824dff6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}